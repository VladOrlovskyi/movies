{"version":3,"sources":["redux/auth/auth.types.js","api/api.js","redux/auth/auth.action.js","hoc/withAuth.jsx","components/Header/UserMenu.jsx","components/Header/Login/validate.jsx","components/Header/Login/Field.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/PrimaryReleaseYear.jsx","components/Filters/Pagination.jsx","components/Filters/Genres/Genres.jsx","components/Filters/Genres/GenresHOC.jsx","components/Filters/Filters.jsx","components/Movies/Favorite.jsx","components/Movies/WillWatch.jsx","components/UIComponents/default-image.png","components/UIComponents/Image.jsx","components/UIComponents/Progressbar.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/Movies/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/pages/MoviePage/MoviePageTabs/NavTabs.jsx","components/pages/MoviePage/MoviePageTabs/MovieDetail.jsx","components/UIComponents/Loader.jsx","components/pages/MoviePage/MoviePageTabs/MovieVideos.jsx","components/pages/MoviePage/MoviePageTabs/MovieActors.jsx","components/pages/MoviePage/MoviePageTabs/MoviePageTabs.jsx","components/pages/MoviePage/MovieOverview.jsx","components/pages/MoviePage/MoviePage.jsx","components/App.js","reportWebVitals.js","utils/cookies.js","redux/auth/auth.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["LOGOUT","TOGGLE_LOGIN_MODAL","UPDATE_FAVORITE_MOVIES","FETCH_SUCCESS_AUTH","API_URL","API_KEY_3","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","params","queryStringParams","api_key","queryString","stringify","mode","headers","body","method","JSON","fetchAuth","session_id","dispatch","type","get","user","updateAuth","fetchFavoriteMovies","payload","id","updateFavoriteMovies","results","movies","onLogOut","toggleLoginModal","mapStateToProps","state","auth","mapDispatchToProps","authActions","bindActionCreators","withAuth","Component","connect","this","props","React","dropdownOpen","toggleDropdown","setState","prevState","handleLogOut","delete","Dropdown","isOpen","toggle","DropdownToggle","tag","onClick","width","className","src","avatar","gravatar","hash","alt","DropdownMenu","right","DropdownItem","to","validateFields","values","errors","username","password","Field","labelText","placeholder","name","value","onChange","handleBlur","htmlFor","classNames","invalid","onBlur","e","target","base","console","log","Object","keys","length","onSubmit","submitting","post","request_token","status_message","onLogin","preventDefault","getClassForInput","key","disabled","Modal","showLoginModal","ModalBody","SortBy","sort_by","onChangeFilters","map","option","label","defaultProps","years","i","push","getYear","PrimaryReleaseYear","primary_release_year","item","PureComponent","Pagination","page","total_pages","onChangePagination","bind","Genres","genresList","with_genres","genre","checked","includes","String","GenresHOC","event","filter","link","genres","Filters","filters","pagination","onReset","markAsFavorite","movieId","favorite_movies","getFavoriteList","isLoading","media_type","media_id","favorite","getCurrentFavorite","some","isFavorite","style","pointerEvents","Star","StarBorder","addToWatchList","watchlist","getWatchList","getCurrentWatchList","isWillWatch","Bookmark","BookmarkBorder","Image","path","rest","DefaultImg","Progressbar","percentage","vote_average","color","text","background","backgroundPadding","styles","buildStyles","backgroundColor","textColor","pathColor","trailColor","MovieItem","poster_path","backdrop_path","title","MoviesList","movie","MoviesHOC","getMovies","language","join","prevProps","_","isEqual","MoviesPage","initialState","tabs","withRouter","match","index","MovieDetail","movieDetails","movieDataList","release_date","runtime","original_language","production_countries","budget","revenue","production_companies","Table","scope","Loader","Spinner","MovieVideos","movieVideos","height","frameborder","allowFullScreen","MovieActors","movieActors","cast","profile_path","character","MoviePageTabs","component","MovieOverview","overview","Fragment","MoviePage","imgUrl","backgroundImage","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","cookies","Cookies","favoriteMovies","authReducer","action","types","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","getState","next","set","maxAge","remove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdb0ef18.chunk.js","sourcesContent":["export const UPDATE_AUTH = \"UPDATE_AUTH\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const TOGGLE_LOGIN_MODAL = \"TOGGLE_LOGIN_MODAL\";\r\nexport const UPDATE_FAVORITE_MOVIES = \"UPDATE_FAVORITE_MOVIES\";\r\nexport const FETCH_REQUEST_AUTH = \"FETCH_REQUEST_AUTH\"\r\nexport const FETCH_SUCCESS_AUTH = \"FETCH_SUCCESS_AUTH\"\r\nexport const FETCH_ERROR_AUTH = \"FETCH_ERROR_AUTH\"","import queryString from \"query-string\";\r\nexport const API_URL = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\r\nexport const API_KEY_4 = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\r\n\r\n\r\nexport const fetchApi = (url, options = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, options)\r\n            .then((response) => {\r\n                if (response.status < 400) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            })\r\n            .then((data) => {\r\n                resolve(data);\r\n            })\r\n            .catch(response => {\r\n                response.json().then(error => {\r\n                    reject(error);\r\n                });\r\n            });\r\n    });\r\n};\r\n\r\nexport default class CallApi {\r\n    static get(url, options = {}) {\r\n        const { params = {} } = options;\r\n        const queryStringParams = {\r\n            api_key: API_KEY_3,\r\n            ...params\r\n        };\r\n\r\n        return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\r\n            {\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    static post(url, options = {}) {\r\n        const { params = {}, body = {} } = options;\r\n        const queryStringParams = {\r\n            api_key: API_KEY_3,\r\n            ...params\r\n        };\r\n        return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\r\n            {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    static delete(url, options = {}) {\r\n        const { params = {}, body = {} } = options;\r\n        const queryStringParams = {\r\n            api_key: API_KEY_3,\r\n            ...params\r\n        };\r\n        return fetchApi(`${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\r\n            {\r\n                method: \"DELETE\",\r\n                mode: \"cors\",\r\n                headers: {\r\n                    \"Content-type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(body)\r\n            }\r\n        );\r\n    }\r\n}","import * as types from \"./auth.types\"\r\nimport CallApi from \"../../api/api\";\r\n\r\n\r\nexport const fetchAuth = session_id => dispatch => {\r\n    dispatch({\r\n        type: types.FETCH_REQUEST_AUTH\r\n    });\r\n    CallApi.get(\"/account\", {\r\n        params: {\r\n            session_id\r\n        }\r\n    })\r\n        .then(user => {\r\n            dispatch(updateAuth({ user, session_id }));\r\n            dispatch(fetchFavoriteMovies({ user, session_id }))\r\n        })\r\n        .catch(error => {\r\n            dispatch({\r\n                type: types.FETCH_ERROR_AUTH,\r\n                payload: error\r\n            })\r\n        })\r\n}\r\n\r\n\r\nexport const updateAuth = ({ user, session_id }) => ({\r\n    type: \"FETCH_SUCCESS_AUTH\",\r\n    payload: {\r\n        user,\r\n        session_id\r\n    }\r\n});\r\n\r\nexport const fetchFavoriteMovies = ({ user, session_id }) => dispatch => {\r\n    CallApi.get(`/account/${user.id}/favorite/movies`, {\r\n        params: {\r\n            session_id: session_id\r\n        }\r\n    }).then(data => {\r\n        dispatch(updateFavoriteMovies(data.results));\r\n    });\r\n};\r\n\r\nexport const updateFavoriteMovies = movies => {\r\n    return {\r\n        type: \"UPDATE_FAVORITE_MOVIES\",\r\n        payload: movies\r\n    }\r\n}\r\n\r\nexport const onLogOut = () => {\r\n    return {\r\n        type: \"LOGOUT\",\r\n\r\n    };\r\n};\r\n\r\nexport const toggleLoginModal = () => {\r\n    return {\r\n        type: \"TOGGLE_LOGIN_MODAL\",\r\n\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as authActions from \"../redux/auth/auth.action\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  authActions: bindActionCreators(authActions, dispatch),\r\n});\r\n\r\nexport const withAuth = (Component) =>\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(\r\n    class WithAuth extends React.Component {\r\n      render() {\r\n        return <Component {...this.props} />;\r\n      }\r\n    }\r\n  );\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { withAuth } from \"../../hoc/withAuth\";\r\nimport CallApi from \"../../api/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserMenu extends Component {\r\n  state = { dropdownOpen: false };\r\n\r\n  toggleDropdown = () => {\r\n    this.setState((prevState) => ({\r\n      dropdownOpen: !prevState.dropdownOpen,\r\n    }));\r\n  };\r\n\r\n  handleLogOut = () => {\r\n    CallApi.delete(\"/authentication/session\", {\r\n      body: {\r\n        session_id: this.props.auth.session_id,\r\n      },\r\n    }).then(() => {\r\n      this.props.authActions.onLogOut();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\r\n        <DropdownToggle\r\n          tag=\"div\"\r\n          onClick={this.toggleDropdown}\r\n          data-toggle=\"dropdown\"\r\n          aria-expanded={this.state.dropdownOpen}\r\n        >\r\n          <img\r\n            width=\"40\"\r\n            className=\"rounded-circle\"\r\n            src={`https://secure.gravatar.com/avatar/${auth.user.avatar.gravatar.hash}.jpg?s=64\"`}\r\n            alt=\"\"\r\n            onClick={this.toggleDropdown}\r\n          />\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          <DropdownItem>\r\n            <Link to=\"/account/favorites\">Избранные</Link>\r\n          </DropdownItem>\r\n          <DropdownItem onClick={this.handleLogOut}>Выйти</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(UserMenu);\r\n","const validateFields = (values) => {\r\n  const errors = {};\r\n\r\n  if (values.username === \"\") {\r\n    errors.username = \"Not empty\";\r\n  }\r\n\r\n  if (values.password === \"\") {\r\n    errors.password = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validateFields;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport default class Field extends React.Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      labelText,\r\n      type,\r\n      placeholder,\r\n      name,\r\n      value,\r\n      onChange,\r\n      handleBlur,\r\n      error,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={id}>{labelText}</label>\r\n        <input\r\n          type={type}\r\n          className={classNames(\"form-control\", { invalid: error })}\r\n          id={id}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n          onBlur={handleBlur}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport CallApi from \"../../../api/api\";\r\nimport validateFields from \"./validate\";\r\nimport Field from \"./Field\";\r\nimport { withAuth } from \"../../../hoc/withAuth\";\r\nimport classNames from \"classnames\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      values: {\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n      errors: {},\r\n      submitting: false,\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState((prevState) => ({\r\n      values: {\r\n        ...prevState.values,\r\n        [name]: value,\r\n      },\r\n      errors: {\r\n        ...prevState.errors,\r\n        base: null,\r\n        [name]: null,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleBlur = () => {\r\n    console.log(\"on blur\");\r\n    const errors = validateFields(this.state.values);\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          ...errors,\r\n        },\r\n      }));\r\n    }\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const {\r\n      values: { username, password },\r\n    } = this.state;\r\n\r\n    let session_id = null;\r\n    this.setState({\r\n      submitting: true,\r\n    });\r\n\r\n    CallApi.get(\"/authentication/token/new\")\r\n      .then((data) => {\r\n        return CallApi.post(\"/authentication/token/validate_with_login\", {\r\n          body: {\r\n            username,\r\n            password,\r\n            request_token: data.request_token,\r\n          },\r\n        });\r\n      })\r\n      .then((data) => {\r\n        return CallApi.post(\"/authentication/session/new\", {\r\n          body: {\r\n            request_token: data.request_token,\r\n          },\r\n        });\r\n      })\r\n      .then((data) => {\r\n        session_id = data.session_id;\r\n        return CallApi.get(\"/account\", {\r\n          params: {\r\n            session_id: data.session_id,\r\n          },\r\n        });\r\n      })\r\n      .then((user) => {\r\n        this.setState(\r\n          {\r\n            submitting: false,\r\n          },\r\n          () => {\r\n            this.props.authActions.updateAuth({ user, session_id });\r\n            this.props.authActions.toggleLoginModal();\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error\", error);\r\n        this.setState({\r\n          submitting: false,\r\n          errors: {\r\n            base: error.status_message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  onLogin = (e) => {\r\n    e.preventDefault();\r\n    const errors = validateFields(this.state.values);\r\n    if (Object.keys(errors).length > 0) {\r\n      this.setState((prevState) => ({\r\n        errors: {\r\n          ...prevState.errors,\r\n          ...errors,\r\n        },\r\n      }));\r\n    } else {\r\n      this.onSubmit();\r\n    }\r\n  };\r\n\r\n  getClassForInput = (key) =>\r\n    classNames(\"form-control\", {\r\n      invalid: this.state.errors[key],\r\n    });\r\n\r\n  render() {\r\n    const {\r\n      values: { username, password },\r\n      errors,\r\n      submitting,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"form-login-container\">\r\n        <form className=\"form-login\">\r\n          <h1 className=\"h3 mb-3 font-weight-normal text-center\">\r\n            Авторизация\r\n          </h1>\r\n          <Field\r\n            id=\"username\"\r\n            labelText=\"Пользователь\"\r\n            type=\"text\"\r\n            placeholder=\"Пользователь\"\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={this.onChange}\r\n            handleBlur={this.handleBlur}\r\n            error={errors.username}\r\n          />\r\n          <Field\r\n            id=\"password\"\r\n            labelText=\"Пароль\"\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={this.onChange}\r\n            handleBlur={this.handleBlur}\r\n            error={errors.password}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\" btn btn-lg btn-primary btn-block\"\r\n            onClick={this.onLogin}\r\n            disabled={submitting}\r\n          >\r\n            Вход\r\n          </button>\r\n          {errors.base && (\r\n            <div className=\"invalid-feedback text-center\">{errors.base}</div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withAuth(LoginForm);\r\n","import React from \"react\";\r\nimport { Modal, ModalBody } from \"reactstrap\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { withAuth } from \"../../../hoc/withAuth\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    const { auth, authActions } = this.props;\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"btn login-btn btn-success\"\r\n          onClick={authActions.toggleLoginModal}\r\n        >\r\n          Войти\r\n        </div>\r\n        <Modal\r\n          isOpen={auth.showLoginModal}\r\n          toggle={authActions.toggleLoginModal}\r\n        >\r\n          <ModalBody>\r\n            <LoginForm />\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withAuth(Login);\r\n","import React from \"react\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport { withAuth } from \"../../hoc/withAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Login from \"./Login/Login\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    const { auth } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-primary\">\r\n        <div className=\"container\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item active\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {auth.user ? <UserMenu /> : <Login />}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default withAuth(Header);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class SortBy extends React.Component {\r\n  static propTypes = {\r\n    sort_by: PropTypes.string.isRequired,\r\n    onChangeFilters: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    options: [\r\n      { label: \"Популярные по убыванию:\", value: \"popularity.desc\" },\r\n      { label: \"Популярные по возростанию:\", value: \"popularity.asc\" },\r\n      { label: \"Рейтинг по убыванию:\", value: \"vote_average.desc\" },\r\n      { label: \"Рейтинг по возростанию:\", value: \"vote_average.asc\" },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { sort_by, onChangeFilters, options } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"sort_by\">Сортировать по:</label>\r\n        <select\r\n          id=\"sort_by\"\r\n          className=\"form-control\"\r\n          name=\"sort_by\"\r\n          value={sort_by}\r\n          onChange={onChangeFilters}\r\n        >\r\n          {options.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst getYear = () => {\r\n  const options = [];\r\n  for (let i = 2021; i >= 2000; i--) {\r\n    options.push(i);\r\n  }\r\n  return options;\r\n};\r\n\r\nconst years = getYear();\r\n\r\nexport default class PrimaryReleaseYear extends React.PureComponent {\r\n  static propTypes = {\r\n    primary_release_year: PropTypes.string.isRequired,\r\n    onChangeFilters: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { primary_release_year, onChangeFilters } = this.props;\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"primary_release_year\">Год релиза:</label>\r\n        <select\r\n          className=\"form-control\"\r\n          id=\"primary_release_year\"\r\n          name=\"primary_release_year\"\r\n          value={primary_release_year}\r\n          onChange={onChangeFilters}\r\n        >\r\n          <option>Выберите год</option>\r\n          {years.map((item) => (\r\n            <option value={item} key={item}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Pagination extends React.Component {\r\n  static propTypes = {\r\n    page: PropTypes.number.isRequired,\r\n    total_pages: PropTypes.number.isRequired,\r\n    onChangePagination: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { page, total_pages, onChangePagination } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"btn-group btn-pagination\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn mr-2\"\r\n            disabled={page === 1}\r\n            onClick={onChangePagination.bind(null, page - 1, total_pages)}\r\n          >\r\n            Назад\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn\"\r\n            onClick={onChangePagination.bind(null, page + 1, total_pages)}\r\n          >\r\n            Вперед\r\n          </button>\r\n        </div>\r\n        <div className=\"page-pagination\">\r\n          {page} из {total_pages}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GenresHOC from \"./GenresHOC\";\r\n\r\nconst Genres = ({ genresList, with_genres, onChange }) => (\r\n  <div className=\"filters__form-genres genres\">\r\n    <div className=\"genres__choice\">Выберите жанр:</div>\r\n    {genresList.map((genre) => (\r\n      <div key={genre.id} className=\"form-check\">\r\n        <input\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          name=\"with_genres\"\r\n          value={genre.id}\r\n          id={`genre${genre.id}`}\r\n          onChange={onChange}\r\n          checked={with_genres.includes(String(genre.id))}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor={`genre${genre.id}`}>\r\n          {genre.name}\r\n        </label>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nGenres.defaultProps = {\r\n  genresList: [],\r\n  with_genres: [],\r\n};\r\n\r\nGenres.propTypes = {\r\n  genresList: PropTypes.array.isRequired,\r\n  with_genres: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GenresHOC(Genres);\r\n","import React from \"react\";\r\nimport { API_URL, API_KEY_3 } from \"../../../api/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default (Component) =>\r\n  class GenresHOC extends React.Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n        genresList: [],\r\n      };\r\n    }\r\n\r\n    static propTypes = {\r\n      with_genres: PropTypes.array.isRequired,\r\n      onChangeFilters: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n      const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-RU`;\r\n      fetch(link)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          this.setState({\r\n            genresList: data.genres,\r\n          });\r\n        });\r\n    }\r\n\r\n    onChange = (event) => {\r\n      this.props.onChangeFilters({\r\n        target: {\r\n          name: \"with_genres\",\r\n          value: event.target.checked\r\n            ? [...this.props.with_genres, event.target.value]\r\n            : this.props.with_genres.filter(\r\n                (genre) => genre !== event.target.value\r\n              ),\r\n        },\r\n      });\r\n    };\r\n\r\n    render() {\r\n      const { genresList } = this.state;\r\n      const { with_genres } = this.props;\r\n      // console.log(Component);\r\n      return (\r\n        <Component\r\n          genresList={genresList}\r\n          with_genres={with_genres}\r\n          onChange={this.onChange}\r\n        />\r\n      );\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport SortBy from \"./SortBy\";\r\nimport PrimaryReleaseYear from \"./PrimaryReleaseYear\";\r\nimport Pagination from \"./Pagination\";\r\nimport Genres from \"./Genres/Genres\";\r\n\r\nexport default class Filters extends React.Component {\r\n  render() {\r\n    const {\r\n      filters: { sort_by, primary_release_year, with_genres },\r\n      pagination: { page, total_pages },\r\n      onChangeFilters,\r\n      onChangePagination,\r\n      onReset,\r\n    } = this.props;\r\n    return (\r\n      <form className=\"filters_form\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn  btn-outline-dark\"\r\n            onClick={onReset}\r\n          >\r\n            Сбросить фильтры\r\n          </button>\r\n        </div>\r\n        <SortBy sort_by={sort_by} onChangeFilters={onChangeFilters} />\r\n        <PrimaryReleaseYear\r\n          primary_release_year={primary_release_year}\r\n          onChangeFilters={onChangeFilters}\r\n        />\r\n        <div className=\"mb-3\">\r\n          <Genres with_genres={with_genres} onChangeFilters={onChangeFilters} />\r\n        </div>\r\n        <Pagination\r\n          page={page}\r\n          total_pages={total_pages}\r\n          onChangePagination={onChangePagination}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport { Star, StarBorder } from \"@material-ui/icons\";\r\nimport { withAuth } from \"../../hoc/withAuth\";\r\n\r\nclass Favorite extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  markAsFavorite = () => {\r\n    const {\r\n      user,\r\n      session_id,\r\n      movieId,\r\n      favorite_movies,\r\n      getFavoriteList,\r\n      toggleLoginModal,\r\n    } = this.props;\r\n\r\n    if (session_id) {\r\n      this.setState(\r\n        {\r\n          isLoading: true,\r\n        },\r\n        () => {\r\n          CallApi.post(`/account/${user.id}/favorite`, {\r\n            params: {\r\n              session_id,\r\n            },\r\n            body: {\r\n              media_type: \"movie\",\r\n              media_id: movieId,\r\n              favorite: !this.getCurrentFavorite(favorite_movies, movieId),\r\n            },\r\n          }).then(() => {\r\n            getFavoriteList().then(() => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      toggleLoginModal();\r\n    }\r\n  };\r\n\r\n  getCurrentFavorite = (favorite_movies = [], movieId) =>\r\n    favorite_movies.some((item) => item.id === movieId);\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    const { favorite_movies, movieId } = this.props;\r\n    const isFavorite = this.getCurrentFavorite(favorite_movies, movieId);\r\n    return (\r\n      <div\r\n        className=\"d-inline-flex mark-favorite\"\r\n        onClick={this.markAsFavorite}\r\n        style={{ pointerEvents: isLoading ? \"none\" : \"auto\" }}\r\n      >\r\n        {isFavorite ? <Star /> : <StarBorder />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(Favorite);\r\n","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport { Bookmark, BookmarkBorder } from \"@material-ui/icons\";\r\nimport { withAuth } from \"../../hoc/withAuth\";\r\n\r\nclass WillWatch extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  addToWatchList = () => {\r\n    const {\r\n      user,\r\n      session_id,\r\n      movieId,\r\n      watchlist,\r\n      getWatchList,\r\n      toggleLoginModal,\r\n    } = this.props;\r\n\r\n    if (session_id) {\r\n      this.setState(\r\n        {\r\n          isLoading: true,\r\n        },\r\n        () => {\r\n          CallApi.post(`/account/${user.id}/watchlist`, {\r\n            params: {\r\n              session_id,\r\n            },\r\n            body: {\r\n              media_type: \"movie\",\r\n              media_id: movieId,\r\n              watchlist: !this.getCurrentWatchList(watchlist, movieId),\r\n            },\r\n          }).then(() => {\r\n            getWatchList().then(() => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      toggleLoginModal();\r\n    }\r\n  };\r\n\r\n  getCurrentWatchList = (watchlist = [], movieId) =>\r\n    watchlist.some((item) => item.id === movieId);\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    const { watchlist, movieId } = this.props;\r\n    const isWillWatch = this.getCurrentWatchList(watchlist, movieId);\r\n    return (\r\n      <div\r\n        className=\"d-inline-flex mark-watch\"\r\n        onClick={this.addToWatchList}\r\n        style={{ pointerEvents: isLoading ? \"none\" : \"auto\" }}\r\n      >\r\n        {isWillWatch ? <Bookmark /> : <BookmarkBorder />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withAuth(WillWatch);\r\n","export default __webpack_public_path__ + \"static/media/default-image.469e6448.png\";","import React from \"react\";\r\nimport DefaultImg from \"./default-image.png\";\r\n\r\nconst Image = ({ path, ...rest }) =>\r\n  path ? (\r\n    <img src={`https://image.tmdb.org/t/p/w500${path}`} {...rest} alt=\"\" />\r\n  ) : (\r\n    <img src={DefaultImg} {...rest} alt=\"\" />\r\n  );\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst Progressbar = ({ vote_average }) => {\r\n  const percentage = vote_average * 10;\r\n  const color = percentage > 70 ? \"#21D07A\" : \"#D0D331\";\r\n\r\n  return (\r\n    <CircularProgressbar\r\n      value={percentage}\r\n      text={`${percentage}%`}\r\n      background\r\n      backgroundPadding={6}\r\n      styles={buildStyles({\r\n        backgroundColor: \"#081c24\",\r\n        textColor: \"#fff\",\r\n        pathColor: color,\r\n        trailColor: \"transparent\",\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Progressbar;\r\n","import React from \"react\";\r\nimport Favorite from \"./Favorite\";\r\nimport WillWatch from \"./WillWatch\";\r\nimport Image from \"../UIComponents/Image\";\r\nimport Progressbar from \"../UIComponents/Progressbar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MovieItem extends React.Component {\r\n  render() {\r\n    const { item } = this.props;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body card-movie\">\r\n          <div className=\"card-movie_img\">\r\n            <Link to={`/movie/${item.id}/details}`}>\r\n              <Image\r\n                className=\"card-img-top card-img--height\"\r\n                alt=\"\"\r\n                path={item.poster_path || item.backdrop_path}\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"card-movie_description\">\r\n            <div className=\"card-movie_icons\">\r\n              <Progressbar vote_average={item.vote_average} />\r\n              <Favorite movieId={item.id} />\r\n              <WillWatch movieId={item.id} />\r\n            </div>\r\n            <Link\r\n              className=\"card-title card-movie_name\"\r\n              to={`/movie/${item.id}/details`}\r\n            >\r\n              {item.title}\r\n            </Link>\r\n            <div className=\"card-movie_details\">\r\n              <Link to={`/movie/${item.id}/details`}>Подробнее</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport MoviesHOC from \"./MoviesHOC\";\r\n\r\nconst MoviesList = ({ movies }) => (\r\n  <div className=\"row\">\r\n    {movies.map((movie) => {\r\n      return (\r\n        <div key={movie.id} className=\"col-6 mb-4\">\r\n          <MovieItem item={movie} />\r\n        </div>\r\n      );\r\n    })}\r\n  </div>\r\n);\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MoviesHOC(MoviesList);\r\n","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\nimport _ from \"lodash\";\r\n\r\nexport default (Component) =>\r\n  class MovieHOC extends React.Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.state = {\r\n        movies: [],\r\n      };\r\n    }\r\n\r\n    getMovies = (filters, page) => {\r\n      const { sort_by, primary_release_year, with_genres } = filters;\r\n      const queryStringParams = {\r\n        language: \"ru-RU\",\r\n        sort_by: sort_by,\r\n        page: page,\r\n        primary_release_year: primary_release_year,\r\n        with_genres: with_genres,\r\n      };\r\n\r\n      if (with_genres.length > 0)\r\n        queryStringParams.with_genres = with_genres.join(\",\");\r\n\r\n      CallApi.get(\"/discover/movie\", {\r\n        params: queryStringParams,\r\n      }).then((data) => {\r\n        this.props.onChangePagination(page, data.total_pages);\r\n        this.setState({\r\n          movies: data.results,\r\n        });\r\n      });\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.getMovies(this.props.filters, this.props.pagination.page);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (!_.isEqual(this.props.filters, prevProps.filters)) {\r\n        this.getMovies(this.props.filters, 1);\r\n      }\r\n\r\n      if (this.props.pagination.page !== prevProps.pagination.page) {\r\n        this.getMovies(this.props.filters, this.props.pagination.page);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { movies } = this.state;\r\n      // console.log(Component);\r\n      return <Component movies={movies} />;\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport Filters from \"../../Filters/Filters\";\r\nimport MoviesList from \"../../Movies/MoviesList\";\r\n\r\nexport default class MoviesPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.initialState = {\r\n      filters: {\r\n        sort_by: \"popularity.desc\",\r\n        primary_release_year: \"\",\r\n        with_genres: [],\r\n      },\r\n      pagination: {\r\n        page: 1,\r\n        total_pages: 1,\r\n      },\r\n    };\r\n    this.state = { ...this.initialState };\r\n  }\r\n\r\n  onChangeFilters = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    this.setState((prevState) => ({\r\n      filters: {\r\n        ...prevState.filters,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  onChangePagination = (\r\n    page,\r\n    total_pages = this.state.pagination.total_pages\r\n  ) => {\r\n    this.setState((prevState) => ({\r\n      pagination: {\r\n        ...prevState.pagination,\r\n        page,\r\n        total_pages,\r\n      },\r\n    }));\r\n  };\r\n\r\n  onReset = () => {\r\n    this.setState({ ...this.initialState });\r\n  };\r\n\r\n  render() {\r\n    const { filters, pagination } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col-4\">\r\n            <div className=\"card w-100\">\r\n              <div className=\"card-body\">\r\n                <h3>Фильтры:</h3>\r\n                <Filters\r\n                  pagination={pagination}\r\n                  filters={filters}\r\n                  onChangeFilters={this.onChangeFilters}\r\n                  onChangePagination={this.onChangePagination}\r\n                  onReset={this.onReset}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <MoviesList\r\n              filters={filters}\r\n              pagination={pagination}\r\n              onChangePagination={this.onChangePagination}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nconst tabs = [\r\n  {\r\n    link: \"Детали\",\r\n    path: \"details\",\r\n  },\r\n  {\r\n    link: \"Видео\",\r\n    path: \"videos\",\r\n  },\r\n  {\r\n    link: \"Актеры\",\r\n    path: \"actors\",\r\n  },\r\n];\r\n\r\nconst NavTabs = ({ match }) => (\r\n  <ul className=\"nav nav-tabs movie-tabs\">\r\n    {tabs.map((item, index) => (\r\n      <li className=\"nav-item movie-tabs_item\" key={index}>\r\n        <NavLink to={`${match.url}/${item.path}`} className=\"nav-link \">\r\n          {item.link}\r\n        </NavLink>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default withRouter(NavTabs);\r\n","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nexport default class MovieDetail extends React.Component {\r\n  static defaultProps = {\r\n    movieDetails: {\r\n      production_countries: [],\r\n      production_companies: [],\r\n      genresList: [],\r\n    },\r\n  };\r\n\r\n  render() {\r\n    const { movieDetails } = this.props;\r\n    const movieDataList = [\r\n      {\r\n        name: \"Статус\",\r\n        value: movieDetails.status,\r\n      },\r\n      {\r\n        name: \"Дата выхода\",\r\n        value: movieDetails.release_date,\r\n      },\r\n      {\r\n        name: \"Продолжительность\",\r\n        value: `${movieDetails.runtime}минут`,\r\n      },\r\n      {\r\n        name: \"Язык оригинала\",\r\n        value: movieDetails.original_language,\r\n      },\r\n      {\r\n        name: \"Страна\",\r\n        value: movieDetails.production_countries.map((item) => item.name),\r\n      },\r\n      {\r\n        name: \"Бюджет\",\r\n        value: `${movieDetails.budget}$`,\r\n      },\r\n      {\r\n        name: \"Сборы\",\r\n        value: `${movieDetails.revenue}$`,\r\n      },\r\n      {\r\n        name: \"Компания\",\r\n        value: movieDetails.production_companies.map((item) => item.name),\r\n      },\r\n      {\r\n        name: \"Жанры\",\r\n        value: movieDetails.genres.map((item) => item.name),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Table>\r\n        <tbody>\r\n          {movieDataList.map((item, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <th scope=\"row\">{item.name}</th>\r\n                <td>{`${item.value}`}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"row justify-content-center mt-4\">\r\n    <div className=\"col-3\">\r\n      <Spinner color=\"primary\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport CallApi from \"../../../../api/api\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Loader from \"../../../UIComponents/Loader\";\r\n\r\nclass MovieVideos extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      movieVideos: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    CallApi.get(`/movie/${params.id}/videos`).then((data) => {\r\n      this.setState({\r\n        movieVideos: data.results,\r\n        isLoading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movieVideos, isLoading } = this.state;\r\n\r\n    return isLoading ? (\r\n      <Loader />\r\n    ) : (\r\n      <div className=\"row\">\r\n        {movieVideos.map((item) => (\r\n          <div className=\"col-6\" key={item.id}>\r\n            <iframe\r\n              title=\"video\"\r\n              width=\"100%\"\r\n              height=\"260\"\r\n              src={`https://www.youtube.com/embed/${item.key}`}\r\n              frameborder=\"0\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(MovieVideos);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CallApi from \"../../../../api/api\";\r\nimport Image from \"../../../UIComponents/Image\";\r\nimport Loader from \"../../../UIComponents/Loader\";\r\n\r\nclass MovieActors extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      movieActors: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    CallApi.get(`/movie/${params.id}/credits`).then((data) => {\r\n      this.setState({\r\n        movieActors: data,\r\n        isLoading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movieActors, isLoading } = this.state;\r\n    return isLoading ? (\r\n      <Loader />\r\n    ) : (\r\n      <div className=\"row movie-actors\">\r\n        {movieActors.cast.map(\r\n          (item) =>\r\n            item.profile_path && (\r\n              <div key={item.id} className=\"col-3 movie-actors_item\">\r\n                <Image alt=\"\" path={item.profile_path} />\r\n                <div className=\"movie-actors_name\">\r\n                  <h3>{item.name}</h3>\r\n                  <span>{item.character}</span>\r\n                </div>\r\n              </div>\r\n            )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieActors);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NavTabs from \"../MoviePageTabs/NavTabs\";\r\nimport MovieDetail from \"../MoviePageTabs/MovieDetail\";\r\nimport MovieVideos from \"../MoviePageTabs/MovieVideos\";\r\nimport MovieActors from \"../MoviePageTabs/MovieActors\";\r\n\r\nexport default class MoviePageTabs extends React.Component {\r\n  render() {\r\n    const { movieDetails } = this.props;\r\n    return (\r\n      <section className=\"movie-details\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center mt-4\">\r\n            <div className=\"col-10\">\r\n              <NavTabs />\r\n              <div className=\"content\">\r\n                <Switch>\r\n                  <Route path=\"/movie/:id/details\">\r\n                    <MovieDetail movieDetails={movieDetails} />\r\n                  </Route>\r\n                  <Route path=\"/movie/:id/videos\" component={MovieVideos} />\r\n                  <Route path=\"/movie/:id/actors\" component={MovieActors} />\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Favorite from \"../../Movies/Favorite\";\r\nimport WillWatch from \"../../Movies/WillWatch\";\r\nimport Progressbar from \"../../UIComponents/Progressbar\";\r\n\r\nconst MovieOverview = ({ title, overview, vote_average, movieId }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>{title}</h1>\r\n      <div>\r\n        <Progressbar vote_average={vote_average} />\r\n        <Favorite movieId={movieId} />\r\n        <WillWatch movieId={movieId} />\r\n      </div>\r\n      <p>{overview}</p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MovieOverview;\r\n","import React from \"react\";\r\nimport CallApi from \"../../../api/api\";\r\nimport MoviePageTabs from \"../MoviePage/MoviePageTabs/MoviePageTabs\";\r\nimport Image from \"../../UIComponents/Image\";\r\nimport MovieOverview from \"./MovieOverview\";\r\nimport Loader from \"../../UIComponents/Loader\";\r\n\r\nexport default class MoviePage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movieDetails: [],\r\n      isLoading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n\r\n    CallApi.get(`/movie/${params.id}`, {\r\n      params: { language: \"ru-RU\" },\r\n    }).then((data) => {\r\n      this.setState({\r\n        movieDetails: data,\r\n        isLoading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { movieDetails, isLoading } = this.state;\r\n    const imgUrl = `https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}`;\r\n    return isLoading ? (\r\n      <Loader />\r\n    ) : (\r\n      <React.Fragment>\r\n        <section\r\n          className=\"movie-overview\"\r\n          style={{ backgroundImage: `url(${imgUrl})` }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-4\">\r\n                <Image path={movieDetails.poster_path} width=\"100%\" alt=\"\" />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <MovieOverview\r\n                  title={movieDetails.title}\r\n                  overview={movieDetails.overview}\r\n                  vote_average={movieDetails.vote_average}\r\n                  movieId={movieDetails.id}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <MoviePageTabs movieDetails={movieDetails} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Header from \"./Header/Header\";\r\nimport Login from \"./Header/Login/Login\";\r\nimport MoviesPage from \"./pages/MoviesPage/MoviesPage\";\r\nimport MoviePage from \"./pages/MoviePage/MoviePage\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { withAuth } from \"../hoc/withAuth\"\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { auth, authActions } = this.props;\r\n    if (auth.session_id) {\r\n      authActions.fetchAuth(auth.session_id)\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <Header />\r\n          {auth.showLoginModal && <Login />}\r\n          <Route exact path=\"/\" component={MoviesPage} />\r\n          <Route path=\"/movie/:id\" component={MoviePage} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuth(App)","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import Cookies from \"universal-cookie\";\r\n\r\nexport const cookies = new Cookies();","import * as types from \"./auth.types\"\r\nimport { cookies } from \"../../utils/cookies\"\r\n\r\nconst initialState = {\r\n    user: null,\r\n    session_id: cookies.get(\"session_id\"),\r\n    showLoginModal: false,\r\n    favoriteMovies: []\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_SUCCESS_AUTH:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                session_id: action.payload.session_id,\r\n            };\r\n        case types.LOGOUT:\r\n            return {\r\n                ...state,\r\n                session_id: null,\r\n                user: null,\r\n            };\r\n        case types.TOGGLE_LOGIN_MODAL:\r\n            return {\r\n                ...state,\r\n                showLoginModal: !state.showLoginModal\r\n            };\r\n        case types.UPDATE_FAVORITE_MOVIES:\r\n            return {\r\n                ...state,\r\n                favoriteMovies: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth/auth.reducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    auth: authReducer\r\n});\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cookies } from \"../utils/cookies\"\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\nimport { FETCH_SUCCESS_AUTH, LOGOUT } from './auth/auth.types';\r\n\r\n\r\nconst updateCookies = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === FETCH_SUCCESS_AUTH) {\r\n        cookies.set(\"session_id\", action.payload.session_id, {\r\n            path: \"/\",\r\n            maxAge: 2592000\r\n        });\r\n    }\r\n\r\n    if (action.type === LOGOUT) {\r\n        cookies.remove(\"session_id\")\r\n    }\r\n\r\n    return next(action)\r\n}\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk, updateCookies)));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport \"./stylesheets/index.scss\";\r\nimport store from './redux/store';\r\nimport { Provider } from \"react-redux\"\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}